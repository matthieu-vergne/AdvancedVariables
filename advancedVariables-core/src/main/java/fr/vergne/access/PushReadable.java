package fr.vergne.access;

/**
 * A {@link PushReadable} entity is an entity for which we can get the value on
 * a "push" basis: the entity itself tells when the value is generated.
 * 
 * @author Matthieu Vergne <matthieu.vergne@gmail.com>
 * 
 * @param <T>
 * @see PullReadable
 */
public interface PushReadable<T> extends Accessable {

	/**
	 * Due to the fact that values are generated by the current entity, any
	 * other entity needing to know about this value need to register a
	 * listener. This listener should be called every time a new value is
	 * generated.
	 * 
	 * @param listener
	 *            the {@link ValueListener} to register
	 */
	public void addValueListener(ValueListener<T> listener);

	/**
	 * When registered through {@link #addValueListener(ValueListener)}, any
	 * notification should be sent to the registered listeners. When a listener
	 * becomes obsolete, it can be removed through this method.
	 * 
	 * @param listener
	 *            the {@link ValueListener} to unregister
	 */
	public void removeValueListener(ValueListener<T> listener);

	/**
	 * A {@link ValueListener} is a listener dedicated to the
	 * {@link PushReadable} entities. This listener allows to describe what
	 * should be done when a value is generated by the corresponding
	 * {@link PushReadable}.
	 * 
	 * @author Matthieu Vergne <matthieu.vergne@gmail.com>
	 * 
	 * @param <T>
	 */
	public static interface ValueListener<T> {
		/**
		 * 
		 * @param value
		 *            the value generated by the {@link PushReadable}
		 */
		public void valueGenerated(T value);
	}
}
